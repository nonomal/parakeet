name: Build (Windows)

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request:
  schedule:
    # Build once every fortnight
    - cron: "10 4 1,15 * *"

permissions:
  contents: write

jobs:
  build:
    name: "Build Windows Binary"
    strategy:
      matrix:
        win_ver: ["win32", "win64"]
        include:
          - vs_ver: "2022"
          - win_ver: win32
            vcpkg_arch: "x86"
          - win_ver: win64
            vcpkg_arch: "x64"

    runs-on: windows-2022
    env:
      CMAKE_BUILD_PARALLEL_LEVEL: "3"
      VCPKG_DEFAULT_BINARY_CACHE: ${{ github.workspace }}/.vcpkg-bc

    steps:
      - name: "‚è≥ Clone repo..."
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: "üñºÔ∏è Setup scene..."
        shell: bash
        run: |
          mkdir -p .vcpkg-bc
          mkdir -p build
          bash scripts/build-configure-vcpkg.sh
          bash scripts/build-prepare.sh

      - name: "üè≠ vcpkg: setup binary cache"
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-vcpkg-${{ matrix.win_ver }}-${{ hashFiles('**/vcpkg.json') }}
          path: |
            .vcpkg-bc
          restore-keys: |
            ${{ runner.os }}-vcpkg-${{ matrix.win_ver }}-
            ${{ runner.os }}-vcpkg-
            ${{ runner.os }}-

      - name: "üîß CMake: Configure"
        shell: bash
        run: |
          cmake --preset "${{ matrix.win_ver }}-${{ matrix.vs_ver }}" \
            -D"VCPKG_BUILD_TYPE=release" \
            -D"CMAKE_BUILD_TYPE=Release"

      - name: "üõ†Ô∏è CMake: Build"
        run: cmake --build --preset "${{ matrix.win_ver }}-${{ matrix.vs_ver }}-release"

      - name: "üì¶ Packaging"
        shell: bash
        run: |
          BUILD_DIR="out/build/${{ matrix.win_ver }}-${{ matrix.vs_ver }}"
          DIST_DIR="dist"
          cp "${BUILD_DIR}/Release/parakeet_wx.exe" \
             "${DIST_DIR}/Parakeet-${{ matrix.win_ver }}.exe"

      - name: "üöÄ Upload artifact"
        uses: actions/upload-artifact@v3
        with:
          name: "${{ matrix.win_ver }}"
          path: dist/

  release:
    needs: build
    runs-on: ubuntu-22.04
    name: "Release Windows Binary"
    strategy:
      matrix:
        win_ver: ["win32", "win64"]

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: "${{ matrix.win_ver }}"
          path: dist/

      - name: "üóúÔ∏è Packaging"
        run: |
          set -ex

          cd dist/
          zip -r9 "../Parakeet.${{ matrix.win_ver }}.zip" .

      - name: üìù Draft Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          body: "<to be filled>"
          draft: true
          token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
          files: |
            *.zip

cmake_minimum_required(VERSION 3.21)
project(parakeet_wx VERSION 0.3.1)

option(PARAKEET_SINGLE_THREADED "Use single-threaded mode for Parakeet-wx" OFF)

include("${CMAKE_CURRENT_SOURCE_DIR}/cmake/CPM-Loader.cmake")
include("${CMAKE_CURRENT_SOURCE_DIR}/cmake/set_static_build.cmake")
include("${CMAKE_CURRENT_SOURCE_DIR}/cmake/linker_hack.cmake")
include("${CMAKE_CURRENT_SOURCE_DIR}/cmake/git-info.cmake")

if(CMAKE_BUILD_TYPE STREQUAL "Release")
  add_compile_options(-DNDEBUG=1 -D_NDEBUG=1)
endif()

CPMAddPackage(
  NAME parakeet-crypto
  GITHUB_REPOSITORY parakeet-rs/libparakeet
  GIT_TAG v0.4.1
  OPTIONS
    "PARAKEET_CRYPTO_BUILD_TESTING OFF"
    "PARAKEET_CRYPTO_BUILD_EXAMPLES OFF"
)
CPMAddPackage(
  NAME parakeet-audio
  GITHUB_REPOSITORY parakeet-rs/libparakeet-audio
  GIT_TAG v0.1.1
  OPTIONS
      "PARAKEET_AUDIO_BUILD_TESTING OFF"
)

# Bootstrap dependencies from vcpkg / system
set(Boost_NO_WARN_NEW_VERSIONS 1)
find_package(Boost COMPONENTS thread REQUIRED system chrono filesystem)
find_package(wxWidgets COMPONENTS base aui core adv propgrid REQUIRED)
find_package(nlohmann_json CONFIG REQUIRED)
include(${wxWidgets_USE_FILE})

configure_file (
    "${PROJECT_SOURCE_DIR}/src/constants.h.in"
    "${PROJECT_BINARY_DIR}/src/constants.h"
    @ONLY
)
# Include our source files:
file(GLOB_RECURSE SOURCES
  "src/*.cpp"
  "src/*.h"
  "src/*.hpp"
  "${PROJECT_BINARY_DIR}/src/*.h"
)
add_executable(parakeet_wx ${SOURCES})
target_include_directories(parakeet_wx
  PRIVATE
    ${wxWidgets_INCLUDE_DIRS}
    ${Boost_INCLUDE_DIR}
    ${Boost_INCLUDE_DIRS}
    "src"
    "${PROJECT_BINARY_DIR}/src/"
)
target_precompile_headers(parakeet_wx PRIVATE src/pch.h)
set_target_properties(parakeet_wx PROPERTIES
    CXX_STANDARD 17 CXX_STANDARD_REQUIRED ON EXPORT_COMPILE_COMMANDS ON)
parakeet_linker_hack(parakeet_wxWidgets_LIBRARIES "${wxWidgets_LIBRARIES}")
target_link_libraries(parakeet_wx
  PRIVATE
    ${Boost_LIBRARIES}
    ${parakeet_wxWidgets_LIBRARIES}
    parakeet::crypto
    parakeet::audio
    nlohmann_json::nlohmann_json
)

if (MSVC)
  add_definitions(-D_WIN32=1)
  if("${CMAKE_GENERATOR_PLATFORM}" STREQUAL "x64")
    add_definitions(-D_WIN64=1)
  endif()
  target_sources(parakeet_wx PRIVATE src/app.rc)
else()
  # Those are generated by form designer. Ingore.
  set_source_files_properties(
    src/ui/ui.cpp src/ui/ui.h
    PROPERTIES
      COMPILE_FLAGS "-w"
  )
endif()

# i18n text
file(GLOB MY_I18N_FILE "locale/*")
file(
  COPY ${MY_I18N_FILE}
  DESTINATION "${PROJECT_BINARY_DIR}/"
  PATTERN "*.po" EXCLUDE
  PATTERN "*.pot" EXCLUDE
)
